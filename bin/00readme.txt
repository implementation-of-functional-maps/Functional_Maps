============================================================================================

	Imprementation of Functional Maps 

	eddited by Katsurou Takahashi
		last date : 2015/06/25

============================================================================================
============================================================================================
0.はじめに（目次）
============================================================================================
1.Concept		アルゴリズムに必要な概念についての説明をする。
2.Algorithmの構成	作成するアルゴリズムをグループ分けして説明する。
3.Main Algorithm    	現状把握しているFunctional Mapsのアルゴリズムについて記述します。
4.Reference		参考文献のリスト



============================================================================================
1.Concept
============================================================================================
--------------------------------------------------------------------------------------------
以下が　Functional Maps　で考察されている関数空間の図式を記す。

------------------------------------（図式）-------------------------------------------------

	f(M) in R(実数体)　←f←　M　→（T:1対1写像）→　N　→g→　g(N) in R(実数体) 
　　　　　　　　　				


--------------------------------------------------------------------------------------------

図式の概念を左から順に説明する。

	f(M) in R(実数体)；ShapeNet上のMの離散グラフ（ex.飛行機などのobjファイル）
	f：Mの指示関数
	M：起点となる多様体
	T：MとNの間にある１対１写像（プログラム内ではTの表現行列Cを計算）
	N：Mと比較される多様体、ShapeNet上の各離散グラフ（ex.飛行機などのobjファイル）
	g (=f(T^{-1}))：fとT^{-1}の合成写像、Nの指示関数
	g(N) in R(実数体)；ShapeNet上のNの離散グラフ（ex.飛行機などのobjファイル）
2. Algorithm の構成　以下で現れる記号を説明する。
	x:Mの座標
	x^{~}:Nの座標
	C:Tの表現行列
	C_0:Cの初期値
	L:M, N以外の多様体
					

============================================================================================
2. Algorithm の構成
============================================================================================

Functional Maps のアルゴリズムは　以下の　2つのアルゴリズムに分けて考えられます。
--------------------------------------------------------------------------------------------
入力；Mの離散グラフ、Nの離散グラフ、fから算出される初期化されたTの表現行列の初期値：C_0
--------------------------------------------------------------------------------------------


Step 1 任意の二つの多様体M,Nの間の一対一写像T(プログラムではその表現行列C)を算出する。
		（プログラムを二つに分けて出力：C_0としてもよい。）

Step 2 L　→　M, M　→　N などのように複数回 Step 1 を算出し、
	   類似度が一定の値を保つものを ShapeNet 内の同一カテゴリーとして関連付けする。

--------------------------------------------------------------------------------------------
出力：Mとの類似度が高いL→M→N→...ShapeNetの同一カテゴリーのリスト：（M, N, L ,....)
--------------------------------------------------------------------------------------------

============================================================================================					
3.Main Algorithm 
============================================================================================					
--------------------------------------------------------------------------------------------
Step 1
--------------------------------------------------------------------------------------------

1. C_0(Cの初期値)を最初に設定する。
（その際に与えられたfに関する固有値を求め、その固有関数から正規直交基底を算出）
2. Σ|| Cx - x^{~} || の最小値を求める。（有限要素法による）
3. C_0 ← C 
4. 1.→3.を繰り返し、2.の値が収束したとき、C_0を出力

--------------------------------------------------------------------------------------------
Step 2
--------------------------------------------------------------------------------------------

1. C_i(Step 1 で　Mと比較されたShapeNet上の複数の多様体（の離散グラフ）N_i に対応する表現行列)を
	行列の積により、合成する。
2. C_iの行列式|C_i|が一定の値を超えたものをShapeNetの同一カテゴリーとして関連付けする。
3. 2.で関連付けされたリストを出力




============================================================================================
4.Reference
============================================================================================
・Functional Maps: A Flexible Representation of Maps Between Shapes (Maks Ovsjanikov et. al)
・ラプラシアンの幾何と有限要素法（浦川　肇）




============================================================================================
