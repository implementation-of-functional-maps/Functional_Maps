============================================================================================

	Imprementation of Functional Maps 

	eddited by Katsurou Takahashi
		last date : 2015/07/08

============================================================================================
============================================================================================
0.はじめに（目次）
============================================================================================
1.Concept		アルゴリズムに必要な概念についての説明します。
2.Algorithmの構成	作成するアルゴリズムをグループ分けして説明します。
3.Main Algorithm    	現状把握しているFunctional Mapsのアルゴリズムについて記述します。
4.Reference		参考文献のリスト



============================================================================================
1.Concept
============================================================================================
--------------------------------------------------------------------------------------------
以下が　Functional Maps　で考察されている関数空間の図式を記します。

------------------------------------（図式）-------------------------------------------------

	f(M) in R(実数体)　←f←　M　→（T:1対1写像）→　N　→g→　g(N) in R(実数体) 
　　　　　　　　　				

--------------------------------------------------------------------------------------------
図式の概念を左から順に説明します。
	f(M) in R(実数体)；ShapeNet上のMの離散グラフ（ex.飛行機などのobjファイル）
	f：Mの指示関数
	M：起点となる多様体
	T：MとNの間にある１対１写像（プログラム内ではTの表現行列Cを計算、作用素として考えるので + – × が可能）
	N：Mと比較される多様体、ShapeNet上の各離散グラフ（ex.飛行機などのobjファイル）
	g (=f(T^{-1}))：fとT^{-1}の合成写像、Nの指示関数
	g(N) in R(実数体)；ShapeNet上のNの離散グラフ（ex.飛行機などのobjファイル）

2. Algorithm の構成　以下で現れる記号を説明します。
	x : M の座標
	x^{~} : N の座標
	C: T の表現行列
	C_0 : C の初期値
	L: M, N 以外の多様体
	|C| : Cの行列式の絶対値
	(V_M、E_M) : M の（頂点、枝）のセット
	K_M(i,j) : M の質量行列
	M_M(i,j) : M の剛性行列 
	(v_M,μ_M) : K_M(i,j)v=μM_M(i,j)v から求められる(固有ベクトル, 固有値)
	(v_N,μ_N) : K_N(i,j)v=μM_N(i,j)v から求められる(固有ベクトル, 固有値)
	Eig_M : Mの固有値行列 
	Eig_N : Nの固有値行列 





============================================================================================
2. Algorithm の構成
============================================================================================

Functional Maps のアルゴリズムは　以下の　2つのアルゴリズムに分けて考えます。
--------------------------------------------------------------------------------------------
入力；Mの離散グラフ、Nの離散グラフ、fから算出されるTの表現行列の初期値：C_0
--------------------------------------------------------------------------------------------
Step 1 任意の二つの多様体M,Nの間の一対一写像T(プログラムではその表現行列C)を算出

Step 2 L　→　M, M　→　N などのように複数回 Step 1 を算出・合成
	   類似度が一定の値を保つものを ShapeNet 内の同一カテゴリーとして関連付け

--------------------------------------------------------------------------------------------
出力：Mとの類似度が高いL→M→N→...のリスト（ShapeNetの同一カテゴリーリスト）：（M, N, L ,....), 類似度|C|
--------------------------------------------------------------------------------------------




============================================================================================					
3.Main Algorithm 
============================================================================================					
--------------------------------------------------------------------------------------------
Step 1
--------------------------------------------------------------------------------------------
1. C_0(Cの初期値)を最初に設定する。(以下a.-d.が詳細)
（その際に与えられたfに関する固有値を求め、その固有関数から正規直交基底を算出
	a.MとNの各点における記述子を計算し、１対１対応する関数T（の表現行列C)で保存される制限を算出
		(i).ShapeNet(*.obj)ファイルを読み込み、(V_M(頂点)、E_M(枝))のリストを抽出(N=|V_M|(V_Mの個数)も追加)
		(ii).N×N(ShapeNetではN=27.8K)行列を二つ(各グラフの質量行列 K_M(i,j)、剛性行列 M_M(i,j))作成し、の各成分を初期化
		(iii).Kim et al. [2011] に従い、K_M(i,j)、M_M(i,j)を求める。(1<= i,j <= N)
		(iv).(i).-(iii).をすべての成分について求める。
		(v).K_M(i,j)v=μM_M(i,j)v　の式(v_M,μ_Mはそれぞれ、左式の固有ベクトル、固有値)から一般固有値アルゴリズム(LU分解など)で解く。(v_M,μ_M)出力
		(vi).μ_MからMに関する固有値行列 Eig_M を出力
		(vii).マッチングを行う多様体Nについても同様に Eig_N を求める。
		(viii).Eig_M, Eig_N の成分（を基底として）比較により、C_0 = (c_ij) = (内積<T_f(φ_M),φ_N>)を出力 
	b.もし、目印となる対応や、部分的な分解の制限が既知である場合は、それらの既知の制限を使って保存される制限を算出
	c.MとNの間の（ラプラスーベルトラミや対称性など）の適切な線形作用素への可換な作用素への制限をさらにかける。
	d.上記の制限を有限個の基底をもとに作られた近似的な線形表現へ導入し、最小自乗法でさらに制限をかける。

2. Σ|| Cx - x^{~} || （絶対値）の最小値を算出（有限要素法による）
	a.Eig_MとEig_N のマッチングを行い、C を出力(最初の100個の基底を成分とするの100次正方行列)。
3. C_0 ← C (以下e.-f.が詳細)
	e.Cの初期値C_0を6.2節の手法を利用して修正・改良
	f.もし、点の対応関係が溶融される場合は、6.1節の手法を用いてその対応関係を算出

4. 1.→3.を繰り返し、2.の値が収束したとき(約30~40次正方行列)、算出されたM, N間の類似度|C_0|（行列式の絶対値）を出力C。

--------------------------------------------------------------------------------------------
Step 2
--------------------------------------------------------------------------------------------
1. C_i(Step 1 で　Mと比較されたShapeNet上の複数の離散グラフN_i との間の写像T_iに対応する表現行列C_i)を
	行列の積により合成
2. C_iの行列式|C_i|が一定の値を超えたものをShapeNetの同一カテゴリーとして関連付け
3. 2.で関連付けされたリスト （M, N, L ,....), |C|=|C_0C_1C_2....| を出力




============================================================================================
4.Reference
============================================================================================
・Functional Maps: A Flexible Representation of Maps Between Shapes (Maks Ovsjanikov et. al)
	– Blended Intrinsic Maps(Vladimir G. Kim et. al)
・ラプラシアンの幾何と有限要素法（浦川　肇）




============================================================================================
