============================================================================================

						Imprementation of Functional Maps 

						eddited by Katsurou Takahashi
						last date : 2015/06/25

============================================================================================
============================================================================================
										0.はじめに（目次）
============================================================================================
1.Concept			アルゴリズムに必要な概念についての説明をする。
2.Main Algorithm    現状把握しているFunctional Mapsのアルゴリズムについて記述します。
3.Reference			参考文献のリスト



============================================================================================


	R(実数体)　←(f：)←　M　→（T:1対1写像）→　N　→(g=f(T^{-1}):fとT^{-1}の合成写像)→　R(実数体)
　　　　　　　　　					
					Tの表現行列Cが今回のアルゴリズムで出力される
					M：起点となる多様体
					N：Mと比較される多様体

============================================================================================

Functional Maps のアルゴリズムは　以下の　2つのアルゴリズムに分けて考えられます。

Step 1 任意の二つの多様体M,Nの間の一対一写像T(プログラムではその表現行列C_0)を算出する。

Step 2 L　→　M, M　→　N などのように複数回 Step 1 を算出し、
	   類似度が一定の値を保つものを ShapeNet 内の同一カテゴリーとして関連付けする。





============================================================================================
										1.Concept
============================================================================================

	R(実数体)　←(f：)←　M　→（T:1対1写像）→　N　→(g=f(T^{-1}):fとT^{-1}の合成写像)→　R(実数体)
　　　　　　　　　

============================================================================================

Functional Maps のアルゴリズムは　以下の　2つのアルゴリズムに分けて考えられます。

Step 1 任意の二つの多様体M,Nの間の一対一写像T(プログラムではその表現行列C_0)を算出する。

Step 2 L　→　M, M　→　N などのように複数回 Step 1 を算出し、
	   類似度が一定の値を保つものを ShapeNet 内の同一カテゴリーとして関連付けする。



============================================================================================					
									 	2.Main Algorithm 
============================================================================================
Step 1
============================================================================================

1. T_0(プログラムではT_0の表現行列C_0)を最初に設定する。
（その際に与えられたfに関する固有値を求め、その固有関数から正規直交基底を算出）
2. Σ|| Cx - x^{~} || の最小値を求める。（有限要素法による）
3. C_0 ← C 
4. 1.→3.を繰り返し、2.の値が収束したとき、C_0を出力

============================================================================================
Step 2
============================================================================================

1. C_i(Step 1 で　Mと比較されたShapeNet上の複数の多様体（の離散グラフ）N_i に対応する表現行列)を
	行列の積により、合成する。
2. C_iの行列式|C_i|が一定の値を超えたものをShapeNetの同一カテゴリーとして関連付けする。




============================================================================================
										3.Reference
============================================================================================
・Functional Maps: A Flexible Representation of Maps Between Shapes (Maks Ovsjanikov et. al)
・ラプラシアンの幾何と有限要素法（浦川　肇）




============================================================================================
